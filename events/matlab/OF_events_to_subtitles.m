function OF_events_to_subtitles(binFile, subtitlesFile, outputFile, videoBeginTime, separator)
% Convert binary events file to subtitles files (srt, sub or usf).
%
%   OF_events_to_subtitles(BINFILE, SUBTFILE, OUTPUTFILE) reads the events 
%   binary file BINFILE generated by the Openfeeder device. It translates 
%   binary events to readable string using the text file SUBTFILE. It 
%   finally converts them to the SubRip subtitle format and store them in 
%   the file OUTPUTFILE. Format is automatically choosen according to the
%   extension of OUTPUTFILE:
%
%       *.srt: SubRip
%       *.sub: SubViewer
%       *.usf: Universal Subtitle Format
%
%   OF_events_to_subtitles(___, ___, ___, VIDEOBEGINTIME) uses VIDEOBEGINTIME 
%   to synchronize the begin time of the subtitles. VIDEOBEGINTIME is a Nx3
%   numercial array that contains time in the form [HH MM SS]. It can be
%   passed as an empty array if no synchronization needed.
%
%   OF_events_to_subtitles(___, ___, ___, ___, SEPARATOR) uses SEPARATOR as 
%   a string separator in case of multiple events at the same time. If
%   ommitted, SEPARATOR is set to ','.
%
%   See also OF_events_to_usf, OF_events_to_sub, OF_events_to_txt, OF_events_read
%
%   More information on the Openfeeder project at:
%   https://openfeeder.github.io/
%

% Author:  Jerome Briot
% Contact: jbtechlab@gmail.com
% Version: 1.0.0 - Sept. 10, 2018 - First release
%

% Check number of input arguments
narginchk(0,5)

% If no input argument, select files via dialog
if nargin==0
    
    [filename, pathname] = uigetfile('*.BIN', 'Get BIN file');
    
    if ~filename
        return
    end
    
    binFile = fullfile(pathname, filename);
    
    [filename, pathname] = uigetfile('OF_subtitle*.txt', 'Get events file');
    
    if ~filename
        return
    end
    
    subtitlesFile = fullfile(pathname, filename);
    
end

% Test if files exist
if exist(binFile, 'file')~=2
    error('File "%s" not found', binFile)
end
if exist(subtitlesFile, 'file')~=2
    error('File "%s" not found', subtitlesFile)
end  

[ev, X] = OF_events_readable_read(binFile, subtitlesFile);

if nargin<4
    videoBeginTime = [];
end

if nargin<5
    separator = ',';
end

if nargin<3
    
    [filename, pathname] = uiputfile({'*.srt','SubRip';'*.sub','SubViewer';'*.usf','Universal Subtitle Format'}, 'Get txt file');

    if ~filename
        return
    end

    outputFile = fullfile(pathname, filename);
    
end

[~, ~, ext] = fileparts(outputFile);

switch lower(ext)
    
    case '.srt'
        OF_subtitles_to_srt(ev, X, outputFile, videoBeginTime, separator)
    case '.sub'
        OF_subtitles_to_sub(ev, X, outputFile, videoBeginTime, separator)
    case '.usf'
        OF_subtitles_to_usf(ev, X, outputFile, videoBeginTime, separator)
    otherwise
        error('Subtitle format %s not supported', ext);
        
end
